[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""/tmp/idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""/tmp/idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.2 (Oracle Corporation Java 14.0.1)
[debug]       Load.loadUnit: plugins took 47.905171ms
[debug]       Load.loadUnit: defsScala took 0.151234ms
[debug] [Loading] Scanning directory /root/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /root/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.044821 ms
[debug]           Load.resolveProject(global-plugins) took 20.987452ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /root/.sbt/1.0/plugins, plugins: List(<none>))) took 41.832275ms
[debug] [Loading] Done in /root/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 52.190877ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.140003ms
[debug]     Load.loadUnit(file:/root/.sbt/1.0/plugins/, ...) took 104.461254ms
[debug]   Load.apply: load took 189.477756ms
[debug]   Load.apply: resolveProjects took 2.909719ms
[debug]   Load.apply: finalTransforms took 41.776521ms
[debug]   Load.apply: config.delegates took 3.853644ms
[debug]   Load.apply: Def.make(settings)... took 233.725761ms
[debug]   Load.apply: structureIndex took 63.552475ms
[debug]   Load.apply: mkStreams took 0.836672ms
[info] loading global plugins from /root/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2351.901634ms
[debug]           Load.loadUnit: plugins took 8.492664ms
[debug]           Load.loadUnit: defsScala took 0.001943ms
[debug] [Loading] Scanning directory /home/aechersh/Downloads/test_scala/project
[debug]             Load.loadUnit: mkEval took 2.719673ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/aechersh/Downloads/test_scala/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.167795 ms
[info] loading settings for project test_scala-build from idea.sbt ...
[debug]               Load.resolveProject(test_scala-build) took 1.531269ms
[debug]             Load.loadTransitive: finalizeProject(Project(id test_scala-build, base: /home/aechersh/Downloads/test_scala/project, plugins: List(<none>))) took 3.037069ms
[debug] [Loading] Done in /home/aechersh/Downloads/test_scala/project, returning: (test_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1207.742195ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.671602ms
[debug]         Load.loadUnit(file:/home/aechersh/Downloads/test_scala/project/, ...) took 1218.380171ms
[debug]       Load.apply: load took 1219.151291ms
[debug]       Load.apply: resolveProjects took 0.067427ms
[debug]       Load.apply: finalTransforms took 6.268704ms
[debug]       Load.apply: config.delegates took 0.271531ms
[debug]       Load.apply: Def.make(settings)... took 48.28773ms
[debug]       Load.apply: structureIndex took 24.478745ms
[debug]       Load.apply: mkStreams took 0.002715ms
[info] loading project definition from /home/aechersh/Downloads/test_scala/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2421.957017ms
[debug]     Load.loadUnit: defsScala took 0.001753ms
[debug] [Loading] Scanning directory /home/aechersh/Downloads/test_scala
[debug]       Load.loadUnit: mkEval took 0.09535ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/aechersh/Downloads/test_scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.541487 ms
[info] loading settings for project test_scala from build.sbt ...
[debug]         Load.resolveProject(test_scala) took 17.225821ms
[debug]       Load.loadTransitive: finalizeProject(Project(id test_scala, base: /home/aechersh/Downloads/test_scala, plugins: List(<none>))) took 19.584124ms
[debug] [Loading] Done in /home/aechersh/Downloads/test_scala, returning: (test_scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 410.637116ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.487977ms
[debug]   Load.loadUnit(file:/home/aechersh/Downloads/test_scala/, ...) took 2834.483294ms
[debug] Load.apply: load took 2835.340726ms
[debug] Load.apply: resolveProjects took 0.071595ms
[debug] Load.apply: finalTransforms took 16.068996ms
[debug] Load.apply: config.delegates took 0.286759ms
[debug] Load.apply: Def.make(settings)... took 46.999228ms
[debug] Load.apply: structureIndex took 13.338423ms
[debug] Load.apply: mkStreams took 0.001843ms
[info] set current project to test_scala (in build file:/home/aechersh/Downloads/test_scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 42717 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 42717, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to test_scala (in build file:/home/aechersh/Downloads/test_scala/)
[debug] > Exec(idea-shell, None, None)
